<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAV0YAAAEACACAHwAAFgAAACgAAABXAAAAjAAAAAEACAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAzKzMAZlVmAJlVZgBmVZkAmVWZAGaAZgCZgGYAZoCZAJmAmQDMgJkAZqpmAJmqZgBmqpkAmaqZAMyq
        mQCZqswAzKrMAP+qzADM1ZkAmdXMAMzVzAD/1cwAzNX/AP/V/wDM/8wA///MAMz//wD///8AAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAGxsbGxsbGxsbGxsbGxsbGxsbGxsbGxsbGxsbGxsbGxsbGxsbGxsbGxsbGxsbGxsbGxsbGxsb
        GxsbGxsbGxsbGxsbGxsbGxsbGxsbGxsbGxsbGxsbGxsbABsbGxsbGxsbGxsbGxsbGxsbGxsbGxsbGxsb
        GxsbGxsbGxsbGxsbGxsbGxsbGxsbGxsbGxsbGxsbGxsbGxsbGxsbGxsbGxsbGxsbGxsbGxsbGxsbGxsb
        GwAbGxsbGxsbGxsbGxsbGxsbGxsbGxsbGxsbGxsbGhsbGxsbGxsbGxsbGxsbGxsbGxsbGxsbGxsbGxsb
        GxsbGxsbGxsbGxsbGxsbGRsbGxsbGxsbGxsbGxsAGxsbGxsbGxsbGxsbGxsbGxsbGxsBGxsbGxsbGxkb
        FBsbGxsbGxsbGxsbGhsbGxsbGxsbGxsbGxsbGxsbGxsbGxsbGxsbGxsbGxsXGxsbGxsbGxcUBgMFABsb
        GxsbGxsbGxsbGxsbGxsbGxsbFRQWGxsbGxsbGxsNGxsbGxsbGxsbGxsbGxsbGxsbGxsbGxsbGxsbGxsb
        GxsbGxsbGxsFGxsbGxsbGxsbGwEYGxsbGwAbGxsbGxsbGxsbGxsbGxsbGxsbGxsbGQgbGxsbGxsbGxQX
        GxsbGxsbGxcbGxsbGxsbGxsbGxsbGxsbGxsbGxsbGxsbGxQOFxsbGxsbGxsbFA0bGxsaGxsAGxsbGxsb
        GxsbGxsbGxsbGxsbGxobGxsbBRsbGxsbGxsbGw0bGxsbGxsbGxsbGxsbGxsbGxsbGxsbGxsbGxsbGxsb
        Fw0bGhsbGxsbGxsbBRcbGxsbGxsbABsbGxsbGxsbGxsbGxsbGxsbGxsbGxcbGxsUEBsbFxsXGxUbCBsb
        GxsbGxsbGxsbGxsbGxsbGxsbGxsbGxsbGxsbFA0bGRsbGxsbGxsaCBsbFRsbGxsbGwAbGxsbGxsbGxsb
        GxsbGxsbGxsbGxkbGhsbGxsBFBUUFRQUFBQUGRsbGxsbGxsbGxsbGxsbGxsbGxsbGxsbGxsUEBQbFxsX
        GxcbFxgIFBsbGxsbGxsbGxsAGxsbGxsbGxsbGxsbGxsbGxsbGxsbGxsbGxcbGwgUFBQUFRQVEBUQGxsb
        GxsbGxsbGxsbGxsbGxsbGxsbGxsUCBkUFRQUFRQUFRQIGxUbGxsbGxsbGxsbABsbGxsbGxsbGxsbGxsb
        GxsbGxsbGxsbGxsZGxsbFA4UEBQQFBQUFA0bGxsbGxsbGxsbGxsbGxsbGxsbGxcQFBQQFRQRFBQVFA0U
        GxsbGxobGxsbGRsbGwAbGxsbGxsbGxsbGxsbGxsbGxsbGxsbGxsbGxsbGxsbARQUFBAUDhQNEBkbGxsb
        GxsbGxsbGxsbGxsbGxQNFA4UEhAUFBQQFAUWGRsbGxsbGxsbGxsbGxsAGxsbGxsbGxsbGxsbGxsbGxsb
        GxcbGxsbGxsbGhsbGxkBEBQUFBAUDhQQFBsbGxsbGxsbGxsbGxsbFBQNEBQQFBAUFBAUDhAbGxsbGxsb
        GxsbGxsbGxsbABsbGxsbGxsbGxsbGxsbGxsbGxsbGxsbGxsbGxsbGxcbGxYNEA4QDRAQDRANGxsbGxsb
        GxsbGxsbFBQUEBIQEw4UEBAUARgbGxsbGxsbGxsbGxsbGxsbGwAbGxsbGxsbGxsbGxsbGxsbGxsbGxsb
        GxsbGxsbGxsbGxsZGwAUDw4OEA0ODRAbGxsbGxsbGxsZEAgQDhANEA4UEBIPDhsbFxkbGxsbGxsbGxsb
        GxsbGxsAGxsbGxsbGxsbGxsbGxsbGxsbGxsbGxsbGxsbGxobGxobGxsbCA4NDw4NCBANDRcbGxsbGxsQ
        FA8ODRANEA4QDRABFBsbGxsbGxsbGxsbGxsbGhsbGxsbABsbGxsbGxsbGxsbGxsbGxsbGxsbGxsbGxsb
        GxcbGRsbGxcbGxsUCA0NDg0NCA4NDhsbGxsQDRAODw4IEA0PDhANGxsbGxsaGxsWGxsbGxsbGxsbGxsb
        GwAbGxsbGxsbGxsbGxsbGxsbGxsbGxsbGxsbGxsbGxsbGxsbGxsbGxsADQgNCQ0IDQ0QGxQUCA4NDQ4N
        DQ0NDgENFRsbGxsbGxsbGxsbGRsbGxsbGxsbGxsAGxsbGxsbGxsbGxsbGxsbGxsbGxsbGxsbGxsbGxsb
        GxsbGxoZGxsZGw0IDQgNDQgNDQ0EEA0NCA4IDQkNCA0aGxsbGxsbGxsbGxsbGxsbGxsbGxsbGxsbABsb
        GxQUFBAUFRQUFBUUGxsbGxsbGxsbGxsbGxsbGxsbGxsbGxsbGxsbFwUGDQgLCA0NDg0NDQgNCA0NARQV
        GxsbGxsbGxsbGxsbGxsbGxsbGxsbGxsbGwAbFAgNCA0NDQ0NEA0NCBsbGxsbGxsbGxsbGxsbGxsbGxsb
        GxsXGxsbGxsbAQ0ICAgNBwgNCA0GDQgNCBkbGxsbGxsaGxsbGxsbGxsbGxsbGxsbGxsbGxsAGxQIBg0I
        CAUICAYICAUbGxsbGxobGxsbGxsbGxsbGxsbGxsbGxsbGxsbGxsPBggNBggNBg0IDQgGFhsbGxsbGxsb
        GxsbGxsbGxsbGxsbGxsbGxsbGxsbABsUCAUIBQgGCAUIBQgIGxsbGxsbGxsbGxsbGxsbGxsbGxsbGxsb
        GxsbGxsUFBQHBggIBgcIBQgHEhsbGxsbGxsbGxsbGxsbGxsbGxsaGxsbGxsbGxsbGwAbFAgGCAYHBgcG
        CAUIBRsbGxsbGxsbGxsbGxsbGxobGxsbGxsbGxsbGxsUDhYGCAYIBQgGCAYIBggbGxsbGxsbGxsbGxsb
        GxsbGxsbGxsbGxsbGxsbGxsAGxAFCAUIBggGBwYBCAYbGxsbGxsbGxsbGxsbGxsbGxsbGxsbGxsbGxsO
        DxQGBwYHBggFCAUIBQgFCBkbGxsbGxsbGRsbGxsbGxsbGxsbGxsbGxsbGxsbABsUCAUIBgcGBwYIBQgH
        GxsbGxsbGxsbGxsbGxsbGxsbGxsbGxsbGxsODxQGBwYIBgcGBwYBCAYHBggFCBsbGxsbGxsbGxsbFRsb
        GxsbGxsbGxsbGxsbGwAbFAYIBQgGBwYHBggFBhsbGxsbGxsbGxsbGxsbGxsbGxsbGxsbGxsIDg0GCAYH
        BQgGDAINBQUIAQYBCAYHGxsbGxsbGxsbGxsbGxsbGxsbGxsbGxsbGxsAGxQIBQgFCAYHBggFCAgbGxsb
        GxsbGxsbGxsbGxsbGxsbGxsbGxsNFAgFCAcGCAYIBQIUGxcGBQgGBwYHBgcZGxsbGxsXGxsbGxsbGhsb
        GxsbGxsbGxsbABsUCAUIBgcGCAUIBgcGGxsbGxsbGxsbGxsbGxsbGxsbGxsbGxsIEAgFCAYHBgcGBwYa
        GxsbGwEFCAcGBQQGBxAbGxsbGxsbGxsbGxsbGxsbGxsbGxsbGwAbFAYIBgcGBwYIBQgGBxsbGxsbGxsb
        GxsbGxsbGxsbGxsbGxsNFAUGCAUIBggFCAUQGxsbGxsbCAYGBQgGBwYFCBsbGxsbGxsbGxsbGxsbGxsb
        GxsbGxsAGxQIBQ0GCAYHBg0FCAYbGxsbGxsbGxsbGxsbGxsbGxsbGxUNEAsIBwYIBwYIBQgOGxsbGxsb
        GxsaAQgIBQgFCAYHGxsbGxsbGxsbGxsbGxsbGxsbGxsbABsUCAYHCAgFCAUIBggIGxsbGxsbGxsbGxsb
        GxsbGxsbGxAMFQcGBwYNBggFCAIPGxsbGxsaGxsbGxsFBQYIBgcGBwYUGxsbGxsbGxsbGxsbGxsbGxsb
        GwAbFAgNBggFCAYICAUIBRsbGxsbGxsbGxsbGxsbGxsbGw8GEA0IBggIBQgFCAUNGxUbGxsVGxsbGxUb
        GxABBwYIBQgGBw0bGxsbGxsbGxsbGxsbGxsbGxsAGxQIBgcGCA0GBwYHBggbGxsbGxsbGxsbGxsbGxsb
        Gw0GDw0GBwYHBggGCAYIGxsbGxsbGxsbGxsbGxsbGwYFCAYHBggIBRsbGxsbGxsbGxsbGxsbGxsbABsU
        DQgICwcGCAgGCA0FGxsbGxsbGxsbGxsbGxsbGwUIEAsICAsICAsHBgcNGxsbGxsbGxsbGxsbGxsbGxsb
        CAUIBgcGBwYIFBsbGxsbGxsbGxsbGxsbGwAbFAgNBQgGCAcLCAcGCBsbGxsbGxsbGxsbGxsbGwYIDQgI
        BgcICAUICAgGGxobGxsbGxsbGxsbGxsbGxsbGxsQBgcGDQYHCAYNGxsbGxsbGxsbGxsbGxsAGxQIBggN
        CAgGCAcGDQUbGxsbGxsbGxsbGxsbDQgNCAsIBQ0GCA0GCAoIGxsbGxsbGxsaGxsbGxobGxsaGxsbGxsB
        BgcGDQYHCAYbGxsbGxsbGxsbGxsbABsUCAwIBggFDQYIBggBGxsbGxsbGxsbGxsOCAgUBQgHBggICAYI
        CAUIGxsbGxcbGRsbGxsbGxsbGxsbGxsbGBsbGwgIBwYHCAYHCxAbGxsbGxsbGxsbGwAbFA0GCAwICAYH
        DQgNDhQUFBQUFBQQEBQQDQ0NCAgNBg0IBgcNBgcOGxsbGxsbGxsbGxsbGxsbGxsbGxsbGxsbGxsbFAYI
        CAYIDQgGDRsbGxsbGxsbGxsAGxQIDQgGCAsICAYIDRAQFBAUEBQUFBQUEBQIBg0FCAgGBw0GCAYUGxsb
        GxsbGxsbGxsbGxsbGxsbGxsbGxsbGxsbGxsbBQUIBQgFCAcGFBsbGxsbGxsbABsUCAYMCAgHBg0HBg0N
        FBUUFBQQDg8NDgUIDQgICAsICA0GCA0XGxsbGxsbGxsbGxsbGxsbGxsbGxsbGxsbGxsbGxsbGxsbGxsb
        GxsbGxsbGxsbGxsbGwAbFA0ICAYICwgIBggIBg0FCAYIDQgNBggIBQgGCAsIDQgGEBQUFBQPGxsbGxsb
        GxsbGxsbGxsbGxsbGxsbGxsbGxsbGxsbGxsbGxsbGxsbGxsbGxsbGxsAGxUNCAUNCAgICwcNBgcGCAgK
        CAUIBggMBggIDQcICAUIDQgGFBAUFRQQGRsbGxsbGxsbGxsbGxsbGxsbGxsbGxsbGxsbGxsbGxsbGxsb
        GxsbGxsbGxsbABsUCAsICAYNBQgIBggICAoICAYICAwGCAgNBQgNBggNBggGDQgNDRAVFBANGxsbGxsb
        GxsbGxsbGxsbGxsbGxsbGxsbGxsbGxsbGxsbGxsbGxsbGxsbGwAbFg0ICAsHCAgLCAcNBggICwcNBggI
        CAgGCAgICAgNBggNBwgGBwgFDQ0QDQEbGxsbGxsbGxsbGxsbGxsbGxsbGxsbGxsbGxsbGxsbGxsbGxsb
        GxsbGxsAGxUICwcICAsIBwYIBgcSDxAQDg8ODQ0NDQgFBQYNBwgNCAYNCAYNCAYICA0IBRsbGxsbGxsb
        GxsbGxsbGxsbGxsbGxsbGxsbGxsbGxsbGxsbGxsbGxsbABsUDQgICwgIBg0IDAYIGxsbGxsbGxsbGxsb
        GxsbGxUUBQgICAYHCAYMCAYFFAUEGxsbGxsbGxsbGxsbGxsbGxsbGxsbGxsbGxsbGxsbGxsbGxsbGxsb
        GwAbFQgKCAgHCwgICAYIBhsbGRsbGxsbGxsbGxsXGxsbGxcbBQgNCAsICAYNCAYQBQ4bGxsbGxsbGxsb
        GxsbGxsbGxsbGxsbGxsbGxsbGxsbGxsbGxsbGxsAGxQNCAgLCAgGDAYMCAgbGxsbGxsbGxsbGxsbGxsb
        GxsbGxsZBQgGBwsIBQgNBw4HGxsbGxsbGxsbGxsbGxsbGxsbGxsbGxsbGxsbGxsbGxsbGxsbGxsbABsX
        CAsICAYMCAgIBggFGxsbGxsbGxsbGxsbGxsbGxsbGxsbGxsBDQgICAgIBggGFA0bGxsbGxsbGxsbGxsb
        GxsbGxsbGxsbGxsbGxsbGxsbGxsbGxsbGwAbGAgIBQ0IBggLCA0IDRsbGxsbGxsbGxsbGxsbGxsbGxsb
        GxsXGwUICwcGCAcGBgcQGxsbGxsbGxsbGxsbGxsbGxsbGxsbGxsbGxsbGxsbGxsbGxsbGxsAGxcGDQgI
        Bg0IBwgGBwYbGxsbGxsbGxsbGxsbGxsbGxsbGxsbGxsUCAgGDQgLCAcNBhsbGxsbGxsbGxsbGxsbGxsb
        GxsbGxsbGxsbGxsbGxsbGxsbGxsbABsYCAcLCAcGDQYNCA0IGxsbGxsbGxsbGxsbGxsbGxsbGxsbGxsb
        GwELBwgGCAgGCAcNGxsbGxsbGxsbGxsbGxsbGxsbGxsbGxsbGxsbGxsbGxsbGxsbGwAbFwsICAYNCAgI
        CAYHBhsbGxsbGxsbGxsbGxsbGxsbGxsbGxsbGxsBCAYNCAcLCAUNBhsbGxsbGxsbGxsbGxsbGxsbGxsb
        GxsbGxsbGxsbGxsbGxsbGxsAGxYICwgICAsICggNCA0bGxsbGxsbGxsbGxsbGxsbGxsbGxsbGxsIAQ0I
        BQgGCAgGBwgbGxsbGxsbGxsbGxsbGxsbGxsbGxsbGxsbGxsbGxsbGxsbGxsbABsZCAgHDQYHCAgGCAYI
        GxsbGxsbGxsbGxsbGxsbGxsbGxsbGxsNBQUGCAgLCAgFDQgGGxsbGxsbGxsbGxsbGxsbGxsbGxsbGxsb
        GxsbGxsbGxsbGxsbGwAbFA0ICwgICwgIDQcIDRsbGxsbGxsbGxsbGxsbGxsbGxsbGxkNAQgBDQYIBwYN
        CAYHDRsbGxsbGxsbGxsbGxsbGxsbGxsbGxsbGxsbGxsbGxsbGxsbGxsAGxsGCAgFCAgMBggGDQgbGxsb
        GxsbGxsbGxsbGxsbGxsbGRAQDwYHBggHCAsIBwYICAgbGxsbGxsbGxsbGxsbGxsbGxsbGxsbGxsbGxsb
        GxsbGxsbGxsbABsZBwgLCA0GCA0ICA0FFRsbGxsbGxsbGRsZGxUUERQUFBQUFA4BFAcNBggIBg0ICwcZ
        GxsbGxsbGxsbGxsbGxsbGxsbGxsbGxsbGxsbGxsbGxsbGxsbGwAbFwsHCAYICAYIBQ0OEBQUFBIQFBQQ
        FBQUEBQSFBQUEBQRFBANFAsIBggFDQgGBwgNGxsbGxsbGxsbGxsbGxsbGxsbGxsbGxsbGxsbGxsbGxsb
        GxsbGxsAGxQICAsHDQYMCAgIDQ4UEBQQFBQQEhQQFBQQFBAUFBQUFBQUEAgICA0ICAYIDQYIGxsbGxsb
        GxsbGxsbGxsbGxsbGxsbGxsbGxsbGxsbGxsbGxsbGxsbABsbDQUIBggICAsICxAQFBQVFBQQFRAUFBQR
        FBQUFRQVEBQUCAYNBg0IBQgNCAUIFBsbGxsbGxsbGxsbGxsbGxsbGxsbGxsbGxsbGxsbGxsbGxsbGxsb
        GwAbFQgIDQgMBggICAgNDhQQFBAUFBQUEBUUFBAUEBAUDg0ICwgNCAgIBg0IBQgGGxsbGxsbGxsbGxsb
        GxsbGxsbGxsbGxsbGxsbGxsbGxsbGxsbGxsbGxsAGxoNCAUIBggGDQYNBg0IDQgNBg0ICA0IBggNCA4N
        CA0NCAgIDQgGDQgGCA0IGxsbGxsbGxsbGxsbGxsbGxsbGxsbGxsbGxsbGxsbGxsbGxsbGxsbGxsbABsV
        CAYNCA0IDQcICAgNBggNCA0IBg0IDQgNBg0IBg0ICA0GDQgLBw0IDAYUGxsbGxsbGxsbGxsbGxsbGxsb
        GxsbGxsbGxsbGxsbGxsbGxsbGxsbGxsbGwAbGg0HBgcGCAYIBg0GBwgNBggGDQgNCA0IDQgIDQ0ICAsI
        DQgICAgGCBUbGxsbGxsbGxsbGxsbGxsbGxsbGxsbGxsbGxsbGxsbGxsbGxsbGxsbGxsbGxsAGxcGCA0I
        DQcNCA0IDQsICA0IDQgIDQgNDQgNDQgIDQgNCAgLCA0bGxsbGxsbGxsbGxsbGxsbGxsbGxsbGxsbGxsb
        GxsbGxsbGxsbGxsbGxsbGxsbGxsbABsZBwYIBQgGCAUIBggICA0IDQgNDQ0ODw4UEBQUGxsbGxsbGxsb
        GxsbGxsbGxsbGxsbGxsbGxsbGxsbGxsbGxsbGxsbGxsbGxsbGxsbGxsbGxsbGxsbGwAbGxsbGxsbGxsb
        GxsbGxsbGxsbGxsbGxsbGxsbGxsbGxsbGxsbGxsbGxsbGxsbGxsbGxsbGxsbGxsbGxsbGxsbGxsbGxsb
        GxsbGxsbGxsbGxsbGxsbGxsAGxsbGxsbGxsbGxsbGxsbGxsbGxsbGxsbGxsbGxsbGxsbGxsbGxsbGxsb
        GxsbGxsbGxsbGxsbGxsbGxsbGxsbGxsbGxsbGxsbGxsbGxsbGxsbGxsbGxsbAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==
</value>
  </data>
</root>